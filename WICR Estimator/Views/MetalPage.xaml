<UserControl
    x:Class="WICR_Estimator.Views.MetalPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:WICR_Estimator.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WICR_Estimator.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="700"
    d:DesignWidth="1000"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    mc:Ignorable="d">
    <UserControl.Resources>
        <conv:CheckBoxVisibilityConverter x:Key="checkBoxConv" />
        <conv:EnableTextboxConverter x:Key="textboxConv" />
        <conv:HasFieldEdited x:Key="HasFieldEdited" />
        <Style
            x:Key="editableTextbox"
            BasedOn="{StaticResource MaterialDesignTextBox}"
            TargetType="{x:Type TextBox}">
            <Setter Property="Padding" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <!--<Setter Property="Background" Value="LightYellow" />-->
                    <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}" />
                </Trigger>
                <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                    <!--<Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
                    <Setter Property="Foreground" Value="White" />-->
                    <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                </DataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="FontWeight" Value="Normal" />
                </Trigger>
            </Style.Triggers>

        </Style>
        <Style
            x:Key="addOnTextBox"
            BasedOn="{StaticResource MaterialDesignTextBox}"
            TargetType="{x:Type TextBox}">
            <!--<Setter Property="Background" Value="Gray" />
            <Setter Property="Foreground" Value="Gray"/>-->
            <!--<Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkBrush}" />-->
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMetalChecked}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                        <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                    <!--<Setter Property="Background" Value="{StaticResource AccentColorBrush}"/>
                    <Setter Property="Foreground" Value="White" />-->
                    <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                </DataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="FontWeight" Value="Normal" />
                </Trigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMetalChecked}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <!--<Setter Property="Background" Value="White" />
                        <Setter Property="Foreground" Value="Black"/>-->
                        <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                        <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

            </Style.Triggers>
        </Style>
    </UserControl.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <!--<Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>-->
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <GroupBox
                    Margin="10"
                    materialDesign:ShadowAssist.ShadowDepth="Depth2"
                    BorderThickness="1"
                    Header="Metals"
                    Style="{DynamicResource MaterialDesignGroupBox}">
                    <DataGrid
                        Name="MetalGrid"
                        HorizontalAlignment="Left"
                        AutoGenerateColumns="False"
                        CanUserAddRows="false"
                        CanUserSortColumns="False"
                        HorizontalScrollBarVisibility="Auto"
                        IsTabStop="False"
                        ItemsSource="{Binding Metals}"
                        VerticalScrollBarVisibility="Auto">
                        <DataGrid.ColumnHeaderStyle>
                            <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Style.Triggers>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsStairMetal}" Value="true" />
                                            <Condition Binding="{Binding IsStairMetalChecked}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>

                                            <Setter Property="Background" Value="{StaticResource AccentColorBrush2}" />
                                            <Setter Property="Foreground" Value="{StaticResource AccentColorBrush2}" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>

                            <DataGridTemplateColumn FocusManager.IsFocusScope="False" Header="Material Name">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox
                                                x:Name="includeMe"
                                                Command="{Binding DataContext.CheckboxCommand, ElementName=MetalGrid}"
                                                IsChecked="{Binding IsStairMetalChecked, UpdateSourceTrigger=PropertyChanged}"
                                                Visibility="{Binding IsStairMetal}" />
                                            <!--<CheckBox x:Name="includeMe" Visibility="{Binding Name,
                                    Converter={StaticResource checkBoxConv}}"
                                          IsChecked="{Binding IsStairMetalChecked,UpdateSourceTrigger=PropertyChanged}"></CheckBox>-->
                                            <TextBlock Text="{Binding Name}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Size">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox
                                            HorizontalAlignment="Stretch"
                                            IsEnabled="True"
                                            Style="{StaticResource editableTextbox}"
                                            Text="{Binding Size, UpdateSourceTrigger=LostFocus}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>

                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Units">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox
                                            IsEnabled="{Binding Name, Converter={StaticResource textboxConv}}"
                                            Style="{StaticResource editableTextbox}"
                                            Tag="{Binding Units, Converter={StaticResource HasFieldEdited}}"
                                            Text="{Binding Units, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn
                                Binding="{Binding MaterialPrice, StringFormat={}{0:C}}"
                                Header="Metal Price"
                                IsReadOnly="True" />
                            <DataGridTemplateColumn Header="Special Material Pricing($)">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox
                                            IsEnabled="True"
                                            Style="{StaticResource editableTextbox}"
                                            Tag="{Binding SpecialMetalPricing, Converter={StaticResource HasFieldEdited}}"
                                            Text="{Binding SpecialMetalPricing, StringFormat={}{0:C}, UpdateSourceTrigger=LostFocus}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>

                            </DataGridTemplateColumn>
                            <DataGridTextColumn
                                Binding="{Binding LaborExtension, StringFormat={}{0:C}}"
                                Header="Labor Extension($)"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Binding="{Binding MaterialExtension, StringFormat={}{0:C}}"
                                Header="Material Extension($)"
                                IsReadOnly="True" />

                        </DataGrid.Columns>

                    </DataGrid>
                </GroupBox>
                <GroupBox
                    Margin="10"
                    materialDesign:ShadowAssist.ShadowDepth="Depth2"
                    BorderThickness="1"
                    Header="Miscelleneous Metals"
                    Style="{DynamicResource MaterialDesignGroupBox}">
                    <StackPanel>


                        <StackPanel
                            Grid.Row="2"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            Orientation="Horizontal">
                            <Label
                                VerticalAlignment="Center"
                                Content="Add Miscelleneous Metals"
                                FontWeight="SemiBold" />
                            <Button
                                Width="30"
                                Height="30"
                                Margin="5"
                                Padding="0"
                                HorizontalAlignment="Right"
                                Command="{Binding AddRowCommand}"
                                FontWeight="Bold"
                                ToolTip="Add New Misc Metal">
                                <Button.Content>
                                    <materialDesign:PackIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Kind="Add" />
                                </Button.Content>
                            </Button>
                            <Button
                                Width="30"
                                Height="30"
                                Margin="5"
                                Padding="0"
                                HorizontalAlignment="Right"
                                Command="{Binding RemoveCommand}"
                                FontWeight="Bold"
                                ToolTip="Remove last added Misc Metal">
                                <Button.Content>
                                    <materialDesign:PackIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Kind="Remove" />
                                </Button.Content>
                            </Button>
                        </StackPanel>

                        <DataGrid
                            Name="MiscMetalGrid"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            AutoGenerateColumns="False"
                            CanUserAddRows="false"
                            CanUserSortColumns="False"
                            HorizontalScrollBarVisibility="Auto"
                            ItemsSource="{Binding MiscMetals, UpdateSourceTrigger=PropertyChanged}"
                            VerticalScrollBarVisibility="Auto">
                            <DataGrid.ColumnHeaderStyle>

                                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                                </Style>

                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.Columns>

                                <DataGridTemplateColumn Header="Description Of Misc Metal">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox
                                                IsEnabled="{Binding IsEditable}"
                                                Style="{StaticResource editableTextbox}"
                                                Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Units">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox
                                                IsEnabled="{Binding IsEditable}"
                                                Style="{StaticResource editableTextbox}"
                                                Tag="{Binding Units, Converter={StaticResource HasFieldEdited}}"
                                                Text="{Binding Units, UpdateSourceTrigger=LostFocus}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <!--<DataGridTextColumn Header="Unit Price"
                                    IsReadOnly="{Binding IsReadOnly}"
                                    Binding="{Binding UnitPrice}"/>-->
                                <DataGridTemplateColumn Header="Unit Labor Price">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox
                                                IsEnabled="{Binding IsEditable}"
                                                Style="{StaticResource editableTextbox}"
                                                Tag="{Binding UnitPrice, Converter={StaticResource HasFieldEdited}}"
                                                Text="{Binding UnitPrice, UpdateSourceTrigger=LostFocus}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Material Price($)">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox
                                                IsEnabled="{Binding IsEditable}"
                                                Style="{StaticResource editableTextbox}"
                                                Tag="{Binding MaterialPrice, Converter={StaticResource HasFieldEdited}}"
                                                Text="{Binding MaterialPrice, UpdateSourceTrigger=LostFocus, StringFormat={}{0:C}}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn
                                    Binding="{Binding LaborExtension, Mode=OneWay, StringFormat={}{0:C}}"
                                    Header="Labor Extension($)"
                                    IsReadOnly="True" />

                                <DataGridTextColumn
                                    Binding="{Binding MaterialExtension, Mode=OneWay, StringFormat={}{0:C}}"
                                    Header="Material Extension($)"
                                    IsReadOnly="True" />
                            </DataGrid.Columns>

                        </DataGrid>
                    </StackPanel>
                </GroupBox>
                <GroupBox
                    Margin="10"
                    materialDesign:ShadowAssist.ShadowDepth="Depth2"
                    BorderBrush="{StaticResource AccentColorBrush}"
                    BorderThickness="1"
                    Header="Add-on Metals"
                    Style="{DynamicResource MaterialDesignGroupBox}">
                    <DataGrid
                        Name="AddOnMetalGrid"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        AutoGenerateColumns="False"
                        CanUserAddRows="false"
                        CanUserSortColumns="False"
                        HorizontalScrollBarVisibility="Auto"
                        IsTabStop="False"
                        ItemsSource="{Binding AddOnMetals}"
                        VerticalScrollBarVisibility="Auto">
                        <DataGrid.ColumnHeaderStyle>
                            <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMetalChecked}" Value="false">
                                        <!--<Setter Property="Background" Value="Gray"/>
                                        <Setter Property="Foreground" Value="Gray"/>-->
                                        <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                                        <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox
                                            x:Name="mChbox"
                                            Command="{Binding DataContext.CheckboxCommand, ElementName=AddOnMetalGrid}"
                                            IsChecked="{Binding IsMetalChecked, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn FocusManager.IsFocusScope="False" Header="Material Name">

                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsMetalChecked}" Value="True">
                                                            <Setter Property="Foreground" Value="{Binding}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>

                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Size">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox
                                            x:Name="txtSize"
                                            HorizontalAlignment="Stretch"
                                            IsEnabled="True"
                                            Style="{StaticResource editableTextbox}"
                                            Text="{Binding Size, UpdateSourceTrigger=LostFocus}">
                                            <!--<TextBox.Style>
                                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                                                        <Setter Property="Foreground" Value="{ StaticResource IdealForegroundDisabledBrush}"/>
                                                        <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsMetalChecked}" Value="True">
                                                                <Setter Property="Foreground" Value="{Binding}"/>
                                                                <Setter Property="Background" Value="{Binding}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>-->
                                        </TextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>

                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Units">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox
                                            IsEnabled="{Binding Name, Converter={StaticResource textboxConv}}"
                                            Style="{StaticResource addOnTextBox}"
                                            Tag="{Binding Units, Converter={StaticResource HasFieldEdited}}"
                                            Text="{Binding Units, UpdateSourceTrigger=LostFocus}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn
                                Binding="{Binding MaterialPrice, StringFormat={}{0:C}}"
                                Header="Metal Price"
                                IsReadOnly="True" />
                            <DataGridTemplateColumn Header="Special Material Pricing($)">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox
                                            IsEnabled="True"
                                            Style="{StaticResource addOnTextBox}"
                                            Tag="{Binding SpecialMetalPricing, Converter={StaticResource HasFieldEdited}}"
                                            Text="{Binding SpecialMetalPricing, StringFormat={}{0:C}, UpdateSourceTrigger=LostFocus}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>

                            </DataGridTemplateColumn>

                            <DataGridTextColumn
                                Binding="{Binding LaborExtension, StringFormat={}{0:C}}"
                                Header="Labor Extension($)"
                                IsReadOnly="True" />

                            <DataGridTextColumn
                                Binding="{Binding MaterialExtension, StringFormat={}{0:C}}"
                                Header="Material Extension($)"
                                IsReadOnly="True" />
                        </DataGrid.Columns>

                    </DataGrid>
                </GroupBox>
            </StackPanel>

        </ScrollViewer>




        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <GroupBox
                Grid.Row="0"
                Margin="10,10,0,0"
                HorizontalAlignment="Right"
                BorderBrush="Black"
                Header="Total All Metals"
                Style="{DynamicResource MaterialDesignCardGroupBox}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Grid.Row="0"
                        Margin="5"
                        Style="{StaticResource MaterialDesignBody2TextBlock}"
                        Text="Metal Type" />
                    <TextBlock
                        Grid.Row="1"
                        Margin="5"
                        VerticalAlignment="Center"
                        Style="{StaticResource MaterialDesignBody2TextBlock}"
                        Text="Nails, caulk + overage on metal" />
                    <TextBlock
                        Grid.Row="2"
                        Margin="5"
                        VerticalAlignment="Center"
                        Style="{StaticResource MaterialDesignBody2TextBlock}"
                        Text="Labor Total Cost" />
                    <TextBlock
                        Grid.Row="3"
                        Margin="5,5,5,50"
                        VerticalAlignment="Center"
                        Style="{StaticResource MaterialDesignBody2TextBlock}"
                        Text="Material Total Cost" />


                    <TextBlock
                        Grid.Column="1"
                        Width="200"
                        Margin="5"
                        Style="{StaticResource MaterialDesignSubtitle2TextBlock}"
                        Text="{Binding MetalName}" />
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="5"
                        Style="{StaticResource MaterialDesignSubtitle2TextBlock}"
                        Text="{Binding Nails, StringFormat='\{0\}%'}" />

                    <TextBlock
                        Grid.Row="2"
                        Grid.Column="1"
                        Margin="5"
                        Style="{StaticResource MaterialDesignSubtitle2TextBlock}"
                        Text="{Binding TotalLaborCost, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:C}}" />
                    <TextBlock
                        Grid.Row="3"
                        Grid.Column="1"
                        Margin="5,5,5,50"
                        Style="{StaticResource MaterialDesignSubtitle2TextBlock}"
                        Text="{Binding TotalMaterialCost, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:C}}" />

                </Grid>
            </GroupBox>
            <StackPanel
                Grid.Row="1"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Orientation="Horizontal">
                <!--<Button Content="Fill Grid" Command="{Binding FillValues}"
                        Height="30"
                    Width="100" Background="LightGreen"/>-->
                <Button
                    Height="30"
                    Margin="5"
                    HorizontalAlignment="Right"
                    Command="{Binding CalculateCostCommand}"
                    ToolTip="Calculate Labor and Material Costs">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Kind="Calculator" />
                            <TextBlock
                                Margin="5"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontWeight="bold"
                                Text="Calculate" />

                        </StackPanel>
                    </Button.Content>
                </Button>
            </StackPanel>
        </Grid>


    </Grid>


</UserControl>
