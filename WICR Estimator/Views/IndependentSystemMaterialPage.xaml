<UserControl
    x:Class="WICR_Estimator.Views.IndependentSystemMaterialPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:WICR_Estimator.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WICR_Estimator.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="700"
    d:DesignWidth="1200"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    mc:Ignorable="d">
    <UserControl.Resources>
        <conv:CheckBoxVisibilityConverter x:Key="checkBoxConv" />
        <conv:EnableTextboxConverter x:Key="textboxConv" />
        <conv:QtyTextboxConverter x:Key="qtyTextboxConv" />
        <conv:UnitTextboxConverter x:Key="unitTextboxConv" />
        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
            <Setter Property="Padding" Value="10" />

        </Style>
        <!--< TargetType="Label" x:Key="LabelStyle1">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>-->
        <!--<Style TargetType="TextBlock" x:Key="TextBlockStyle1">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment"  Value="Right"/>
        </Style>-->
        <!--<Style TargetType="TextBox" x:Key="TextBoxStyle">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment"  Value="Center"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness"  Value="1"/>
        </Style>-->
        <Style
            x:Key="cbTB"
            BasedOn="{StaticResource MaterialDesignAccentCheckBox}"
            TargetType="{x:Type CheckBox}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=qtyTb, Path=IsEnabled, TargetNullValue=false}" Value="True">
                    <Setter Property="CheckBox.IsChecked" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=unitTb, Path=IsEnabled, TargetNullValue=false}" Value="True">
                    <Setter Property="CheckBox.IsChecked" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="editableTextbox"
            BasedOn="{StaticResource MaterialDesignTextBox}"
            TargetType="{x:Type TextBox}">

            <Style.Triggers>

                <DataTrigger Binding="{Binding IsMaterialChecked}" Value="False">
                    <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AllEditable}" Value="True">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AllEditable}" Value="False">
                    <Setter Property="IsEnabled" Value="{Binding Path=Name, Converter={StaticResource unitTextboxConv}}" />
                </DataTrigger>

                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}" />
                    <Setter Property="ToolTip" Value="Please enter a numeric value." />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="editableTextboxQTY" TargetType="{x:Type TextBox}">

            <Style.Triggers>

                <DataTrigger Binding="{Binding IsMaterialChecked}" Value="False">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="Gray" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AllEditable}" Value="True">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AllEditable}" Value="False">
                    <Setter Property="IsEnabled" Value="{Binding Path=Name, Converter={StaticResource qtyTextboxConv}}" />
                </DataTrigger>

                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" Value="LightYellow" />
                    <Setter Property="ToolTip" Value="Please enter a numeric value." />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="editableCell" TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger Property="IsReadOnly" Value="False">
                    <Setter Property="Background" Value="LightYellow" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".7*" />
            <ColumnDefinition Width=".3*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />

        </Grid.RowDefinitions>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <DataGrid
                Name="MaterialGridX"
                Grid.RowSpan="5"
                Margin="10"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                materialDesign:DataGridAssist.CellPadding="4"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                CanUserSortColumns="False"
                FrozenColumnCount="2"
                ItemsSource="{Binding SystemMaterials, UpdateSourceTrigger=PropertyChanged}">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMaterialChecked}" Value="False">
                                <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="" KeyboardNavigation.IsTabStop="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox
                                    x:Name="includeMeX"
                                    Command="{Binding DataContext.CheckboxCommand, ElementName=MaterialGrid}"
                                    CommandParameter="{Binding Name}"
                                    IsChecked="{Binding IsMaterialChecked, UpdateSourceTrigger=PropertyChanged}"
                                    IsEnabled="{Binding IsMaterialEnabled, UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>

                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Select Project for Estimate" KeyboardNavigation.IsTabStop="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox
                                    IsReadOnly="True"
                                    KeyboardNavigation.IsTabStop="False"
                                    Text="{Binding Name}" />

                            </DataTemplate>

                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn
                        Binding="{Binding SMUnits}"
                        Header="Units"
                        IsReadOnly="True"
                        KeyboardNavigation.IsTabStop="False" />
                    <!--  For creating editable Units for Independent Material ViewModel.  -->
                    <!--<DataGridTemplateColumn Header="Units">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding SMUnits,UpdateSourceTrigger=LostFocus,Mode=TwoWay}"
                                     Name="unitTb"
                                     Style="{StaticResource editableTextbox}"
                                    />
                        </DataTemplate>

                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
                    <DataGridTextColumn
                        Binding="{Binding SMSqft, StringFormat={}{0:n2}}"
                        Header="Sq ft or Lf Area"
                        IsReadOnly="True"
                        KeyboardNavigation.IsTabStop="False" />

                    <DataGridTextColumn
                        Binding="{Binding Coverage, StringFormat={}{0:n2}}"
                        Header="Coverage"
                        IsReadOnly="True"
                        KeyboardNavigation.IsTabStop="False" />
                    <DataGridTemplateColumn Header="Qty">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox
                                    Name="qtyTb"
                                    KeyboardNavigation.IsTabStop="{Binding Path=Name, Converter={StaticResource qtyTextboxConv}}"
                                    Style="{StaticResource editableTextboxQTY}"
                                    Text="{Binding Qty, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:n2}}" />

                            </DataTemplate>

                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn
                        Binding="{Binding MaterialPrice, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}"
                        Header="Material Price $"
                        IsReadOnly="True"
                        KeyboardNavigation.IsTabStop="False" />

                    <DataGridTextColumn
                        Binding="{Binding MaterialExtension, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}"
                        Header="Material Extension"
                        IsReadOnly="True"
                        KeyboardNavigation.IsTabStop="False" />
                    <DataGridTextColumn
                        Binding="{Binding Weight, UpdateSourceTrigger=PropertyChanged}"
                        Header="Weight"
                        IsReadOnly="True"
                        KeyboardNavigation.IsTabStop="False" />
                    <DataGridTextColumn
                        Binding="{Binding FreightExtension, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:n2}}"
                        Header="Extension"
                        IsReadOnly="True"
                        KeyboardNavigation.IsTabStop="False" />
                    <DataGridTemplateColumn Header="Special Pricing($)">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox
                                    IsEnabled="True"
                                    Style="{StaticResource editableTextbox}"
                                    Text="{Binding SpecialMaterialPricing, UpdateSourceTrigger=LostFocus}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>

            </DataGrid>
        </ScrollViewer>


        <!--<Grid Grid.Column="0" Grid.Row="1"
              HorizontalAlignment="Center"
              >-->
        <GroupBox
            x:Name="OtherCostX"
            Grid.Row="1"
            Grid.RowSpan="2"
            Margin="0,20,0,0"
            HorizontalContentAlignment="Stretch"
            BorderBrush="{StaticResource AccentColorBrush}"
            BorderThickness="0.5"
            FontFamily="Arial"
            FontSize="12"
            FontWeight="Bold"
            Foreground="{StaticResource SecondaryAccentForegroundBrush}"
            Header="Other Cost">


            <DataGrid
                Name="OtherCostGridX"
                Grid.Column="1"
                Margin="0,10,10,10"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:DataGridAssist.CellPadding="4"
                AutoGenerateColumns="False"
                CanUserAddRows="false"
                CanUserSortColumns="False"
                CellStyle="{StaticResource editableCell}"
                ItemsSource="{Binding OtherMaterials, UpdateSourceTrigger=PropertyChanged}">

                <DataGrid.Columns>

                    <!--<DataGridTemplateColumn Header="Items">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Name,UpdateSourceTrigger=LostFocus}"
                                     IsReadOnly="{Binding IsReadOnly}">

                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>-->
                    <DataGridTextColumn
                        Width=".6*"
                        Binding="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                        Header="Items" />
                    <DataGridTextColumn
                        Width=".2*"
                        Binding="{Binding Quantity, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                        Header="Quantity" />
                    <DataGridTextColumn
                        Width=".2*"
                        Binding="{Binding MaterialPrice, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                        Header="Material Price ($)" />
                    <DataGridTextColumn
                        Width=".2*"
                        Binding="{Binding Extension, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}"
                        Header="Extension($)"
                        IsReadOnly="True" />
                </DataGrid.Columns>

            </DataGrid>

        </GroupBox>
        <!--</Grid>-->

        <!--  Row 0 ELement  -->
        <!--  Row 1 ELement  -->
        <GroupBox
            Grid.Row="3"
            Grid.Column="0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            FontSize="12"
            FontWeight="Bold"
            Foreground="Blue"
            Header="Other Cost Total ">
            <StackPanel
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Orientation="Horizontal">
                <Button
                    Name="AddButtonX"
                    Width="25"
                    Height="25"
                    HorizontalAlignment="Right"
                    Command="{Binding AddRowCommand}"
                    Style="{StaticResource MaterialDesignFloatingActionButton}">
                    <Button.Content>
                        <materialDesign:PackIcon
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Kind="Add" />
                    </Button.Content>
                </Button>
                <Button
                    Width="25"
                    Height="25"
                    Margin="5"
                    HorizontalAlignment="Right"
                    Command="{Binding RemoveCommand}"
                    Style="{StaticResource MaterialDesignFloatingActionButton}">
                    <Button.Content>
                        <materialDesign:PackIcon
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Kind="Remove" />
                    </Button.Content>
                </Button>
                <StackPanel>
                    <Label
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="5"
                        Background="FloralWhite"
                        Content="Total ($) :"
                        FontSize="12" />
                </StackPanel>
                <StackPanel>
                    <TextBox
                        x:Name="TotalOCExtensionX"
                        Width="100"
                        Height="25"
                        Margin="5"
                        VerticalContentAlignment="Center"
                        IsEnabled="False"
                        Text="{Binding TotalOCExtension, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}" />
                </StackPanel>
                <!--<Button Command="{Binding CalculateCostCommand}"
                    Content="Calculate"
                    Height="30"
                    Width="100" Background="White"
                    HorizontalAlignment="Right"
                    Margin="30,10,10,10"/>-->
            </StackPanel>
        </GroupBox>
        <!--  Row 1 ELement End  -->
        <!--  Row 2 ELement  -->
        <GroupBox
            x:Name="SubContractX"
            Grid.Row="1"
            Grid.RowSpan="2"
            Grid.Column="1"
            Margin="0,20,0,0"
            BorderBrush="DarkBlue"
            BorderThickness="0.5"
            FontFamily="Arial"
            FontSize="12"
            FontWeight="Bold"
            Foreground="Blue"
            Header="Sub Contract Labor">
            <StackPanel>
                <DataGrid
                    Name="SubConlbrcstGridX"
                    Grid.Column="1"
                    Margin="0,10,10,10"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    materialDesign:DataGridAssist.CellPadding="4"
                    AutoGenerateColumns="False"
                    CanUserAddRows="false"
                    CanUserSortColumns="False"
                    CellStyle="{StaticResource editableCell}"
                    ItemsSource="{Binding SubContractLaborItems, UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Binding="{Binding Name}"
                            Header="Enter Labor Details"
                            IsReadOnly="False" />
                        <DataGridTextColumn
                            Binding="{Binding UnitConlbrcst}"
                            Header="Units"
                            IsReadOnly="{Binding IsReadOnly, Source=UnitConlbrcst}" />
                        <DataGridTextColumn
                            Binding="{Binding UnitPriceConlbrcst}"
                            Header="Unit Price ($)"
                            IsReadOnly="{Binding IsReadOnly}" />
                        <DataGridTextColumn
                            Binding="{Binding MaterialExtensionConlbrcst, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}"
                            Header="Extension($)"
                            IsReadOnly="True" />
                    </DataGrid.Columns>

                </DataGrid>
                <StackPanel Background="FloralWhite" Orientation="Horizontal">
                    <Label
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="5,5,0,5"
                        Content="Total($):"
                        FontSize="12" />
                    <TextBox
                        x:Name="TotalSCExtensionX"
                        Width="80"
                        Height="25"
                        Margin="0,5,5,5"
                        VerticalContentAlignment="Center"
                        IsEnabled="False"
                        Text="{Binding TotalSCExtension, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}" />
                    <!--<Label Content="SubContract Markup%" Grid.Column="1"
                       Margin="5,5,0,5"
                       Style="{StaticResource LabelStyle1}"
                           FontSize="12"
                           Background="FloralWhite"
                       />
                    <TextBox Margin="0,5,5,5"
                             VerticalContentAlignment="Center"
                             Height="25"  Width="50"  Style="{StaticResource editableTextbox}"
                             Text="{Binding SubContractMarkup,
                            UpdateSourceTrigger=LostFocus}"/>-->
                    <StackPanel
                        Grid.Column="1"
                        Margin="5"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center">
                        <TextBlock HorizontalAlignment="Center" Text="SubContract Markup%" />
                        <TextBox
                            Width="40"
                            Margin="5"
                            HorizontalAlignment="Center"
                            Text="{Binding ElementName=slWidthX, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                            TextAlignment="Right" />
                        <Slider
                            Name="slWidthX"
                            Width="200"
                            IsSnapToTickEnabled="True"
                            LargeChange=".2"
                            Maximum="1"
                            Minimum="0"
                            TickFrequency=".05"
                            TickPlacement="Both"
                            Value="{Binding SubContractMarkup}" />
                    </StackPanel>
                </StackPanel>
            </StackPanel>

        </GroupBox>

        <GroupBox
            x:Name="groupBoxMiscX"
            Grid.Row="3"
            Grid.Column="1"
            Margin="10"
            BorderBrush="DarkBlue"
            BorderThickness="0.5"
            FontFamily="Arial"
            FontSize="14"
            FontWeight="Bold"
            Foreground="Blue"
            Header="Total Material Cost Breakup">
            <Grid x:Name="grid5X">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />

                </Grid.RowDefinitions>

                <Label
                    Grid.Row="0"
                    Margin="0,15,5,5"
                    Content="Total Material Cost ($)" />
                <Label Grid.Row="1" Content="Total Weight " />
                <Label Grid.Row="2" Content="Total Freight Cost ($)" />

                <Label Grid.Row="3" Content="Total Sub Contract Labor Cost ($)" />
                <Label Grid.Row="4" Content="Cost per Square Foot ($)" />
                <TextBox
                    x:Name="TotalMaterialCostbrkpX"
                    Grid.Row="0"
                    Grid.Column="2"
                    Width="150"
                    Height="25"
                    Margin="5,16,5,6"
                    VerticalContentAlignment="Center"
                    IsEnabled="False"
                    Text="{Binding TotalMaterialCost, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}" />
                <TextBox
                    x:Name="TotalWeightbrkpX"
                    Grid.Row="1"
                    Grid.Column="2"
                    Width="150"
                    Height="25"
                    Margin="5,1,5,6"
                    VerticalContentAlignment="Center"
                    IsEnabled="False"
                    Text="{Binding TotalWeightbrkp, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" />
                <TextBox
                    x:Name="TotalFreightCostBrkpX"
                    Grid.Row="2"
                    Grid.Column="2"
                    Width="150"
                    Height="25"
                    Margin="5,0,5,5"
                    VerticalContentAlignment="Center"
                    IsEnabled="False"
                    Text="{Binding TotalFreightCostBrkp, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}" />
                <TextBox
                    x:Name="TotalSubContractLaborCostBrkpX"
                    Grid.Row="3"
                    Grid.Column="2"
                    Width="150"
                    Height="25"
                    Margin="5,0,5,5"
                    VerticalContentAlignment="Center"
                    IsEnabled="False"
                    Text="{Binding TotalSubContractLaborCostBrkp, StringFormat='c', UpdateSourceTrigger=PropertyChanged}" />
                <TextBox
                    x:Name="CostpersqFeetX"
                    Grid.Row="4"
                    Grid.Column="2"
                    Width="150"
                    Height="25"
                    Margin="5,0,5,5"
                    VerticalContentAlignment="Center"
                    IsEnabled="False"
                    Text="{Binding CostPerSquareFeet, StringFormat='c', UpdateSourceTrigger=PropertyChanged}" />

            </Grid>
        </GroupBox>
        <!--  Row 4 ELement End  -->

        <StackPanel
            Grid.Row="4"
            Grid.Column="1"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <!--<Button Content="Fill Grid" Command="{Binding FillValues}"
                    Height="30"
                    Margin="10,5,25,5"
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Right"
                    Width="100" Background="LightGreen"/>-->
            <Button
                Height="35"
                Margin="0,5,22,5"
                HorizontalAlignment="Right"
                Command="{Binding CalculateCostCommand}">

                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Kind="Calculator" />
                        <TextBlock
                            Margin="5"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            FontWeight="bold"
                            Text="Calculate" />

                    </StackPanel>
                </Button.Content>
            </Button>
        </StackPanel>


        <!--  Column 1 Element  -->
    </Grid>
</UserControl>
