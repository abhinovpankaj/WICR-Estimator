<UserControl
    x:Class="WICR_Estimator.Views.SystemMaterialPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:WICR_Estimator.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WICR_Estimator.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="700"
    d:DesignWidth="1200"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    mc:Ignorable="d">
    <UserControl.Resources>
        <conv:CheckBoxVisibilityConverter x:Key="checkBoxConv" />
        <conv:EnableTextboxConverter x:Key="textboxConv" />
        <conv:QtyTextboxConverter x:Key="qtyTextboxConv" />
        <conv:UnitTextboxConverter x:Key="unitTextboxConv" />
        <conv:HasFieldEdited x:Key="HasFieldEdited" />
        <conv:IsNull x:Key="isNull" />
        <Style x:Key="FlipperStyle" TargetType="materialDesign:Flipper">
            <Setter Property="Height" Value="80" />
            <Style.Triggers>
                <Trigger Property="IsFlipped" Value="True">
                    <Setter Property="Height" Value="500" />
                </Trigger>

            </Style.Triggers>
        </Style>
        <Style
            x:Key="cbTB"
            BasedOn="{StaticResource MaterialDesignAccentCheckBox}"
            TargetType="{x:Type CheckBox}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=qtyTb, Path=IsEnabled, TargetNullValue=false}" Value="True">
                    <Setter Property="CheckBox.IsChecked" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=unitTb, Path=IsEnabled, TargetNullValue=false}" Value="True">
                    <Setter Property="CheckBox.IsChecked" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="editableTextboxSpecial"
            BasedOn="{StaticResource MaterialDesignTextBox}"
            TargetType="{x:Type TextBox}">

            <Style.Triggers>


                <DataTrigger Binding="{Binding IsMaterialChecked}" Value="False">
                    <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AllEditable}" Value="True">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AllEditable}" Value="False">
                    <Setter Property="IsEnabled" Value="{Binding Path=Name, Converter={StaticResource unitTextboxConv}}" />

                </DataTrigger>

                <Trigger Property="IsEnabled" Value="True">
                    <!--<Setter Property="Background" Value="LightYellow" />-->
                    <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}" />
                    <Setter Property="ToolTip" Value="Please enter a numeric value." />
                </Trigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True" />

                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="FontWeight" Value="Bold" />
                        <!--<Setter Property="Background" Value="Green" />
                    <Setter Property="Foreground" Value="White" />-->
                        <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                        <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                    </MultiDataTrigger.Setters>

                </MultiDataTrigger>

                <Trigger Property="IsEnabled" Value="False">

                    <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}" />

                </Trigger>

            </Style.Triggers>
        </Style>
        <Style
            x:Key="editableTextbox"
            BasedOn="{StaticResource MaterialDesignTextBox}"
            TargetType="{x:Type TextBox}">

            <Style.Triggers>


                <DataTrigger Binding="{Binding IsMaterialChecked}" Value="False">
                    <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AllEditable}" Value="True">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AllEditable}" Value="False">
                    <Setter Property="IsEnabled" Value="{Binding Path=Name, Converter={StaticResource unitTextboxConv}}" />

                </DataTrigger>

                <Trigger Property="IsEnabled" Value="True">
                    <!--<Setter Property="Background" Value="LightYellow" />-->
                    <Setter Property="Background" Value="{StaticResource SecondaryHueMidBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource SecondaryHueMidForegroundBrush}" />
                    <Setter Property="ToolTip" Value="Please enter a numeric value." />
                </Trigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True" />

                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="FontWeight" Value="Bold" />
                        <!--<Setter Property="Background" Value="Green" />
                    <Setter Property="Foreground" Value="White" />-->
                        <Setter Property="Background" Value="{StaticResource PrimaryHueMidBrush}" />
                        <Setter Property="Foreground" Value="{StaticResource PrimaryHueMidForegroundBrush}" />
                    </MultiDataTrigger.Setters>

                </MultiDataTrigger>

                <Trigger Property="IsEnabled" Value="False">

                    <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}" />

                </Trigger>

            </Style.Triggers>
        </Style>
        <Style
            x:Key="editableCell"
            BasedOn="{StaticResource MaterialDesignDataGridCell}"
            TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger Property="IsReadOnly" Value="False">
                    <!--<Setter Property="Background" Value="LightYellow" />-->
                    <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                </Trigger>

            </Style.Triggers>
        </Style>

        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
            <Setter Property="Padding" Value="10" />

        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".7*" />

            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <!--<ScrollViewer VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto"
                      HorizontalAlignment="Left"
                      Opacity="1"
                      VerticalAlignment="Top">-->
        <DataGrid
            Name="MaterialGrid"
            Margin="2"
            VerticalAlignment="Top"
            materialDesign:DataGridAssist.CellPadding="4"
            AutoGenerateColumns="False"
            CanUserAddRows="False"
            CanUserSortColumns="False"
            FrozenColumnCount="1"
            ItemsSource="{Binding SystemMaterials, UpdateSourceTrigger=PropertyChanged}">

            <DataGrid.RowStyle>
                <Style BasedOn="{StaticResource MaterialDesignDataGridRow}" TargetType="DataGridRow">

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMaterialChecked}" Value="False">
                            <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="" KeyboardNavigation.IsTabStop="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox
                                x:Name="includeMe"
                                Command="{Binding DataContext.CheckboxCommand, ElementName=MaterialGrid}"
                                CommandParameter="{Binding Name}"
                                IsChecked="{Binding IsMaterialChecked, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding IsMaterialEnabled, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>

                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Select Material for Estimate" KeyboardNavigation.IsTabStop="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                VerticalAlignment="Center"
                                KeyboardNavigation.IsTabStop="False"
                                Text="{Binding Name}" />

                        </DataTemplate>

                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Units">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox
                                Name="unitTb"
                                IsEnabled="{Binding Path=Name, Converter={StaticResource unitTextboxConv}}"
                                Style="{StaticResource editableTextbox}"
                                Tag="{Binding SMUnits, Converter={StaticResource HasFieldEdited}}"
                                Text="{Binding SMUnits, UpdateSourceTrigger=LostFocus}" />
                        </DataTemplate>

                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Sq ft or Lf Area">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Tag="{Binding SMSqft, Converter={StaticResource HasFieldEdited}}" Text="{Binding SMSqft, StringFormat={}{0:n2}, UpdateSourceTrigger=LostFocus, Mode=TwoWay}">

                                <TextBox.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="{x:Type TextBox}">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Name}" Value="SUPERSTOP (FOUNDATIONS AND WALLS) 1/2&quot; X 1&quot;X 20 FT" />
                                                    <Condition Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="FontWeight" Value="Bold" />
                                                    <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>

                                            <!--<DataTrigger Binding="{Binding Name}"
                                             Value="SUPERSTOP (FOUNDATIONS AND WALLS) 1/2&quot; X 1&quot;X 20 FT">
                                                    <Setter Property="IsEnabled" Value="True"/>
                                                    <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}"/>
                                                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}"/>
                                                </DataTrigger>-->
                                            <!--<DataTrigger Binding="{Binding Tag,
                                                RelativeSource={RelativeSource Self}}"
                                                Value="True">
                                                    <Setter Property="FontWeight" Value="Bold" />
                                                    <Setter Property="Background" Value="Green" />
                                                    <Setter Property="Foreground" Value="White" />
                                                </DataTrigger>-->
                                            <!--<Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" Value="White" />
                                                    <Setter Property="Foreground" Value="Gray"/>
                                                    <Setter Property="FontWeight" Value="Normal" />
                                                </Trigger>-->
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <!--<DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Name}"
                                             Value="SUPERSTOP (FOUNDATIONS AND WALLS) 1/2&quot; X 1&quot;X 20 FT">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="Background" Value="LightYellow"/>
                                    <Setter Property="Foreground" Value="Black"/>

                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>-->
                </DataGridTemplateColumn>

                <DataGridTextColumn
                    Binding="{Binding Coverage, StringFormat={}{0:n2}}"
                    Header="Coverage"
                    IsReadOnly="True"
                    KeyboardNavigation.IsTabStop="False" />
                <DataGridTemplateColumn Header="Qty">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox
                                Name="qtyTb"
                                IsEnabled="{Binding Path=Name, Converter={StaticResource qtyTextboxConv}}"
                                KeyboardNavigation.IsTabStop="{Binding Path=Name, Converter={StaticResource qtyTextboxConv}}"
                                Style="{StaticResource editableTextbox}"
                                Tag="{Binding Qty, Converter={StaticResource HasFieldEdited}}"
                                Text="{Binding Qty, UpdateSourceTrigger=LostFocus, StringFormat={}{0:n2}}" />

                        </DataTemplate>

                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn
                    Binding="{Binding MaterialPrice, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}"
                    Header="Material Price $"
                    IsReadOnly="True"
                    KeyboardNavigation.IsTabStop="False" />

                <DataGridTextColumn
                    Binding="{Binding MaterialExtension, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}"
                    Header="Material Extension"
                    IsReadOnly="True"
                    KeyboardNavigation.IsTabStop="False" />
                <!--<DataGridTextColumn Header="Weight" Binding="{Binding Weight,UpdateSourceTrigger=PropertyChanged}"
                                    IsReadOnly="True" KeyboardNavigation.IsTabStop="False">

                    </DataGridTextColumn>-->
                <DataGridTextColumn
                    Binding="{Binding FreightExtension, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:n2}}"
                    Header="Extension"
                    IsReadOnly="True"
                    KeyboardNavigation.IsTabStop="False" />
                <DataGridTemplateColumn Header="Special Pricing($)">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox
                                IsEnabled="True"
                                Style="{StaticResource editableTextboxSpecial}"
                                Tag="{Binding SpecialMaterialPricing, StringFormat={}{0:C}, Converter={StaticResource HasFieldEdited}}"
                                Text="{Binding SpecialMaterialPricing, UpdateSourceTrigger=LostFocus}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>
        <!--</ScrollViewer>-->


        <ScrollViewer
            Grid.Column="2"
            HorizontalScrollBarVisibility="Hidden"
            VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>


                <!--<materialDesign:Flipper Grid.Row="0" Margin="5,10,5,10" IsFlipped="True"
                    VerticalAlignment="Top" x:Name="OtherCost" Style="{StaticResource FlipperStyle}">

                    <materialDesign:Flipper.FrontContent>
                        <Grid Margin="10,50,10,50" >
                            <Button HorizontalAlignment="Stretch" VerticalAlignment="Top"

                                Height="40"
                        ToolTip="Click to Add Other Costs"
                        Command="{x:Static materialDesign:Flipper.FlipCommand}"
                        >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">

                                        <TextBlock
                                Margin="2,0,0,0"
                                VerticalAlignment="Center"
                                Style="{StaticResource MaterialDesignSubtitle2TextBlock}"
                                Text="Other Costs" />
                                        <TextBlock x:Name="TotalOCExtension"
                                IsEnabled="False"
                                Margin="15,0,0,0"
                                VerticalAlignment="Center"
                                Style="{StaticResource  MaterialDesignSubtitle1TextBlock}"
                                Text="{Binding TotalOCExtension, UpdateSourceTrigger=PropertyChanged,StringFormat='c'}"/>
                                    </StackPanel>
                                </Button.Content>

                            </Button>
                        </Grid>
                    </materialDesign:Flipper.FrontContent>-->
                <!--<materialDesign:Flipper.BackContent >-->
                <Grid Margin="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <materialDesign:ColorZone Padding="10" Mode="Accent">
                        <StackPanel Orientation="Horizontal">
                            <!--<Button  Style="{StaticResource MaterialDesignToolForegroundButton}"
                                            Command="{x:Static materialDesign:Flipper.FlipCommand}"
                                            HorizontalAlignment="Left">
                                        <materialDesign:PackIcon
                                        Kind="ArrowLeft"
                                        HorizontalAlignment="Right" />
                                    </Button>-->
                            <TextBlock Margin="8,0,0,0" VerticalAlignment="Center">
                                Other Costs
                            </TextBlock>
                            <TextBlock
                                x:Name="TotalOCExtension"
                                Margin="45,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="Bold"
                                IsEnabled="False"
                                Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
                                Text="{Binding TotalOCExtension, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}" />
                        </StackPanel>

                    </materialDesign:ColorZone>

                    <DataGrid
                        Name="OtherCostGrid"
                        Grid.Row="1"
                        Grid.Column="1"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        materialDesign:DataGridAssist.CellPadding="4 2 2 2"
                        AutoGenerateColumns="False"
                        CanUserAddRows="false"
                        CanUserSortColumns="False"
                        CellStyle="{StaticResource editableCell}"
                        ItemsSource="{Binding OtherMaterials, UpdateSourceTrigger=PropertyChanged}"
                        VerticalScrollBarVisibility="Auto">
                        <DataGrid.ColumnHeaderStyle>
                            <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Padding" Value="3" />
                            </Style>
                        </DataGrid.ColumnHeaderStyle>

                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="200" Header="Items">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox
                                            BorderThickness="0"
                                            KeyboardNavigation.IsTabStop="False"
                                            Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Quantity">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox BorderThickness="0" Text="{Binding Quantity, Mode=TwoWay, UpdateSourceTrigger=LostFocus}">
                                            <TextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsReadOnly" Value="False">
                                                            <!--<Setter Property="Background" Value="LightYellow" />-->
                                                            <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding Quantity, Converter={StaticResource HasFieldEdited}}" Value="True">
                                                            <!--<Setter Property="Background" Value="Green" />
                                                                    <Setter Property="Foreground" Value="White"/>-->
                                                            <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                                            <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                                                            <Setter Property="FontWeight" Value="Bold" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>

                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Material Price ($)">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox BorderThickness="0" Text="{Binding MaterialPrice, Mode=TwoWay, UpdateSourceTrigger=LostFocus}">
                                            <TextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsReadOnly" Value="False">
                                                            <!--<Setter Property="Background" Value="LightYellow" />-->
                                                            <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding MaterialPrice, Converter={StaticResource HasFieldEdited}}" Value="True">
                                                            <!--<Setter Property="Background" Value="Green" />
                                                                    <Setter Property="Foreground" Value="White"/>-->
                                                            <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                                            <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                                                            <Setter Property="FontWeight" Value="Bold" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>

                            </DataGridTemplateColumn>
                            <DataGridTextColumn
                                Binding="{Binding Extension, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}"
                                Header="Extension($)"
                                IsReadOnly="True" />
                        </DataGrid.Columns>

                    </DataGrid>
                    <StackPanel
                        Margin="5,0,15,0"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                        <Button
                            Name="AddButton"
                            Width="25"
                            Height="25"
                            Padding="0"
                            HorizontalAlignment="Right"
                            Command="{Binding AddRowCommand}"
                            Style="{StaticResource MaterialDesignFloatingActionButton}">
                            <Button.Content>
                                <materialDesign:PackIcon
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="Add" />
                            </Button.Content>
                        </Button>
                        <Button
                            Width="25"
                            Height="25"
                            Margin="5,0,0,0"
                            Padding="0"
                            HorizontalAlignment="Right"
                            Command="{Binding RemoveCommand}"
                            Style="{StaticResource MaterialDesignFloatingActionButton}">
                            <Button.Content>
                                <materialDesign:PackIcon
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="Remove" />
                            </Button.Content>
                        </Button>
                    </StackPanel>

                </Grid>
                <!--</materialDesign:Flipper.BackContent>
                </materialDesign:Flipper>-->
                <materialDesign:Flipper
                    Grid.Row="1"
                    Margin="5,20,5,10"
                    HorizontalAlignment="Stretch"
                    VerticalContentAlignment="Center"
                    IsFlipped="True"
                    Style="{DynamicResource MaterialDesignCardFlipper}">
                    <materialDesign:Flipper.FrontContent>
                        <Grid Margin="10,50,10,50" HorizontalAlignment="Stretch">
                            <Button
                                Height="40"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Command="{x:Static materialDesign:Flipper.FlipCommand}"
                                ToolTip="Click to Add Subcontract labor">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock
                                            Margin="2,0,0,0"
                                            VerticalAlignment="Center"
                                            Style="{StaticResource MaterialDesignSubtitle2TextBlock}"
                                            Text="Sub Contract Labor" />
                                        <TextBlock
                                            x:Name="TotalSCExtension"
                                            Margin="15,0,0,0"
                                            VerticalAlignment="Center"
                                            IsEnabled="False"
                                            Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
                                            Text="{Binding TotalSCExtension, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}" />


                                    </StackPanel>
                                </Button.Content>

                            </Button>
                        </Grid>

                    </materialDesign:Flipper.FrontContent>
                    <materialDesign:Flipper.BackContent>
                        <Grid Margin="0,0,0,40">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <materialDesign:ColorZone Padding="6" Mode="Accent">
                                <StackPanel Orientation="Horizontal">
                                    <Button
                                        HorizontalAlignment="Left"
                                        Command="{x:Static materialDesign:Flipper.FlipCommand}"
                                        Style="{StaticResource MaterialDesignToolForegroundButton}">
                                        <materialDesign:PackIcon HorizontalAlignment="Right" Kind="ArrowLeft" />
                                    </Button>
                                    <TextBlock Margin="8,0,0,0" VerticalAlignment="Center">
                                        Add Sub-Contract Labor
                                    </TextBlock>
                                </StackPanel>
                            </materialDesign:ColorZone>
                            <StackPanel Grid.Row="1">
                                <DataGrid
                                    Name="SubConlbrcstGrid"
                                    Grid.Column="1"
                                    VerticalAlignment="Top"
                                    materialDesign:DataGridAssist.CellPadding="4"
                                    AutoGenerateColumns="False"
                                    CanUserAddRows="false"
                                    CanUserSortColumns="False"
                                    ItemsSource="{Binding SubContractLaborItems, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGrid.ColumnHeaderStyle>
                                        <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Padding" Value="4" />
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn
                                            Binding="{Binding Name}"
                                            Header="Labor Details"
                                            IsReadOnly="False" />
                                        <DataGridTextColumn
                                            Binding="{Binding UnitConlbrcst, UpdateSourceTrigger=LostFocus}"
                                            Header="Units"
                                            IsReadOnly="{Binding IsReadOnly, Source=UnitConlbrcst}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsReadOnly" Value="False">
                                                            <!--<Setter Property="Background" Value="LightYellow" />-->
                                                            <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding UnitConlbrcst, Converter={StaticResource HasFieldEdited}}" Value="True">
                                                            <!--<Setter Property="Background" Value="Green" />
                                                            <Setter Property="Foreground" Value="White"/>-->
                                                            <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                                            <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                                                            <Setter Property="FontWeight" Value="Bold" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn
                                            Binding="{Binding UnitPriceConlbrcst, UpdateSourceTrigger=LostFocus}"
                                            Header="Unit Price ($)"
                                            IsReadOnly="{Binding IsReadOnly}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsReadOnly" Value="False">
                                                            <!--<Setter Property="Background" Value="LightYellow" />-->
                                                            <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding UnitPriceConlbrcst, Converter={StaticResource HasFieldEdited}}" Value="True">
                                                            <!--<Setter Property="Background" Value="Green" />
                                                            <Setter Property="Foreground" Value="White"/>-->
                                                            <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                                            <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                                                            <Setter Property="FontWeight" Value="Bold" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn
                                            Binding="{Binding MaterialExtensionConlbrcst, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}"
                                            Header="Extension($)"
                                            IsReadOnly="True" />
                                    </DataGrid.Columns>

                                </DataGrid>
                                <StackPanel Orientation="Horizontal">

                                    <TextBlock
                                        Margin="15,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Text="SubContract Markup%" />
                                    <TextBox
                                        Width="40"
                                        Margin="15,0,0,0"
                                        VerticalAlignment="Center"
                                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                        Text="{Binding ElementName=slWidth, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        TextAlignment="Center" />

                                    <Slider
                                        Name="slWidth"
                                        Width="200"
                                        Margin="5,0,0,0"
                                        VerticalAlignment="Top"
                                        IsSnapToTickEnabled="True"
                                        LargeChange=".2"
                                        Maximum="1"
                                        Minimum="0"
                                        Style="{StaticResource MaterialDesignDiscreteHorizontalSlider}"
                                        TickFrequency=".05"
                                        TickPlacement="Both"
                                        Value="{Binding SubContractMarkup}" />
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </materialDesign:Flipper.BackContent>
                </materialDesign:Flipper>
                <GroupBox
                    x:Name="groupBoxMisc"
                    Grid.Row="2"
                    Margin="5,15,5,5"
                    VerticalAlignment="Bottom"
                    Header="Total Material Cost Breakup">
                    <Grid x:Name="grid5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />

                        </Grid.RowDefinitions>

                        <Label
                            Grid.Row="0"
                            Margin="0,0,5,5"
                            Content="Total Material Cost ($)"
                            Style="{StaticResource MaterialDesignLabel}" />
                        <Label
                            Grid.Row="1"
                            Content="Total Weight "
                            Style="{StaticResource MaterialDesignLabel}" />
                        <Label
                            Grid.Row="2"
                            Content="Total Freight Cost ($)"
                            Style="{StaticResource MaterialDesignLabel}" />

                        <Label
                            Grid.Row="3"
                            Content="Total Sub Contract Labor Cost ($)"
                            Style="{StaticResource MaterialDesignLabel}" />
                        <Label
                            Grid.Row="4"
                            Content="Cost per Square Foot ($)"
                            Style="{StaticResource MaterialDesignLabel}" />
                        <TextBox
                            x:Name="TotalMaterialCostbrkp"
                            Grid.Row="0"
                            Grid.Column="2"
                            Width="150"
                            Height="25"
                            Margin="5,0,5,5"
                            VerticalContentAlignment="Center"
                            IsEnabled="False"
                            Text="{Binding TotalMaterialCost, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}" />
                        <TextBox
                            x:Name="TotalWeightbrkp"
                            Grid.Row="1"
                            Grid.Column="2"
                            Width="150"
                            Height="25"
                            Margin="5,1,5,6"
                            VerticalContentAlignment="Center"
                            IsEnabled="False"
                            Text="{Binding TotalWeightbrkp, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            x:Name="TotalFreightCostBrkp"
                            Grid.Row="2"
                            Grid.Column="2"
                            Width="150"
                            Height="25"
                            Margin="5,0,5,5"
                            VerticalContentAlignment="Center"
                            IsEnabled="False"
                            Text="{Binding TotalFreightCostBrkp, UpdateSourceTrigger=PropertyChanged, StringFormat='c'}" />
                        <TextBox
                            x:Name="TotalSubContractLaborCostBrkp"
                            Grid.Row="3"
                            Grid.Column="2"
                            Width="150"
                            Height="25"
                            Margin="5,0,5,5"
                            VerticalContentAlignment="Center"
                            IsEnabled="False"
                            Text="{Binding TotalSubContractLaborCostBrkp, StringFormat='c', UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            x:Name="CostpersqFeet"
                            Grid.Row="4"
                            Grid.Column="2"
                            Width="150"
                            Height="25"
                            Margin="5,0,5,5"
                            VerticalContentAlignment="Center"
                            IsEnabled="False"
                            Text="{Binding CostPerSquareFeet, StringFormat='c', UpdateSourceTrigger=PropertyChanged}" />

                    </Grid>
                </GroupBox>
                <Button
                    Grid.Row="3"
                    Height="30"
                    Margin="5,10,5,15"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Command="{Binding CalculateCostCommand}">

                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Kind="Calculator" />
                            <TextBlock
                                Margin="5"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontWeight="bold"
                                Text="Calculate" />

                        </StackPanel>
                    </Button.Content>
                </Button>
            </Grid>

        </ScrollViewer>


    </Grid>
</UserControl>
