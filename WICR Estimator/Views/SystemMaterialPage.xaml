<UserControl x:Class="WICR_Estimator.Views.SystemMaterialPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WICR_Estimator.Views"
              xmlns:conv="clr-namespace:WICR_Estimator.Converters"
             mc:Ignorable="d" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"
     TextElement.FontWeight="Regular"
     TextElement.FontSize="13"
     TextOptions.TextFormattingMode="Ideal"
     TextOptions.TextRenderingMode="Auto"
             d:DesignHeight="700" d:DesignWidth="1200">
    <UserControl.Resources>
        <conv:CheckBoxVisibilityConverter x:Key="checkBoxConv"/>
        <conv:EnableTextboxConverter x:Key="textboxConv"/>
        <conv:QtyTextboxConverter x:Key="qtyTextboxConv"/>
        <conv:UnitTextboxConverter x:Key="unitTextboxConv"/>
        <conv:HasFieldEdited x:Key="HasFieldEdited"/>
        <conv:IsNull x:Key="isNull"/>
        <Style x:Key = "FlipperStyle" TargetType = "materialDesign:Flipper"  >
            <Setter Property = "Height" Value = "80" />
            <Style.Triggers>
                <Trigger Property = "IsFlipped" Value = "True">
                    <Setter Property = "Height" Value = "500" />
                </Trigger>
                
            </Style.Triggers>
        </Style>
        <Style x:Key="cbTB" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MaterialDesignAccentCheckBox}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=qtyTb, Path=IsEnabled,TargetNullValue=false}" Value="True">
                    <Setter Property="CheckBox.IsChecked" Value="True"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=unitTb, Path=IsEnabled,TargetNullValue=false}" Value="True">
                    <Setter Property="CheckBox.IsChecked" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="editableTextbox" BasedOn="{StaticResource  MaterialDesignTextBox}">

            <Style.Triggers >

                
                <DataTrigger Binding="{Binding IsMaterialChecked}" Value="False">
                    <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AllEditable}" Value="True">
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding AllEditable}" Value="False">
                    <Setter Property="IsEnabled" Value="{Binding Path=Name,
                                Converter={StaticResource unitTextboxConv}}"/>
                    
                </DataTrigger>
                
                <Trigger Property="IsEnabled" Value="True">
                    <!--<Setter Property="Background" Value="LightYellow" />-->
                    <Setter Property="Background" Value="{StaticResource   PrimaryHueLightBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource   PrimaryHueLightForegroundBrush}" />
                    <Setter Property="ToolTip" Value="Please enter a numeric value."/>
                </Trigger>
                
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding ="{Binding Tag,RelativeSource={RelativeSource Self}}" 
                             Value="True"/>
                        
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="FontWeight" Value="Bold" />
                        <!--<Setter Property="Background" Value="Green" />
                    <Setter Property="Foreground" Value="White" />-->
                        <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                        <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                    </MultiDataTrigger.Setters>
                    
                </MultiDataTrigger>

                <Trigger Property="IsEnabled" Value="False">

                    <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}" />

                </Trigger>

            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DataGridCell}" x:Key="editableCell" BasedOn="{StaticResource MaterialDesignDataGridCell}">
            <Style.Triggers >
                <Trigger Property="IsReadOnly" Value="False">
                    <!--<Setter Property="Background" Value="LightYellow" />-->
                    <Setter Property="Background" Value="{StaticResource   PrimaryHueLightBrush}" />
                </Trigger>
                
            </Style.Triggers>
        </Style>
        
        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
            <Setter Property="Foreground" Value="{StaticResource  PrimaryHueDarkForegroundBrush}" />
            <Setter Property="Padding" Value="10" />
            
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".7*"/>
            
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        
        <!--<ScrollViewer VerticalScrollBarVisibility="Auto"                       
                      HorizontalScrollBarVisibility="Auto"
                      HorizontalAlignment="Left"
                      Opacity="1"
                      VerticalAlignment="Top">-->
            <DataGrid AutoGenerateColumns="False" 
                  
                  Name="MaterialGrid" 
                  CanUserSortColumns="False"
                  Margin="2"
                  materialDesign:DataGridAssist.CellPadding="4"
                  VerticalAlignment="Top" 
                  CanUserAddRows="False"
                  FrozenColumnCount ="1" 
                                   
                  ItemsSource="{Binding SystemMaterials,UpdateSourceTrigger=PropertyChanged}" >
               
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMaterialChecked}" Value="False">
                                <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="" KeyboardNavigation.IsTabStop="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox x:Name="includeMe" Command="{Binding DataContext.CheckboxCommand,
                                ElementName=MaterialGrid}"
                                      CommandParameter="{Binding Name}"
                                      IsChecked="{Binding IsMaterialChecked,
                                UpdateSourceTrigger=PropertyChanged}"
                                      IsEnabled="{Binding IsMaterialEnabled,
                                UpdateSourceTrigger=PropertyChanged}">

                                </CheckBox>
                            </DataTemplate>

                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Select Material for Estimate" KeyboardNavigation.IsTabStop="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" VerticalAlignment="Center"
                                       KeyboardNavigation.IsTabStop="False">

                                </TextBlock>

                            </DataTemplate>

                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    
                    <DataGridTemplateColumn Header="Units">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Tag="{Binding SMUnits,Converter={StaticResource HasFieldEdited}}" 
                                     Text="{Binding SMUnits,UpdateSourceTrigger=LostFocus}"
                                     Name="unitTb" 
                                         IsEnabled="{Binding Path=Name,
                                Converter={StaticResource unitTextboxConv}}"
                                     Style="{StaticResource  editableTextbox}"
                                    />
                            </DataTemplate>

                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Sq ft or Lf Area">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Tag="{Binding SMSqft,Converter={StaticResource HasFieldEdited}}" 
                                     Text="{Binding SMSqft,StringFormat={}{0:n2},
                                UpdateSourceTrigger=LostFocus,Mode=TwoWay}">

                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Name}" Value="SUPERSTOP (FOUNDATIONS AND WALLS) 1/2&quot; X 1&quot;X 20 FT"/>
                                                        <Condition Binding="{Binding Tag,RelativeSource={RelativeSource Self}}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                        <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                                        <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                
                                                <!--<DataTrigger Binding="{Binding Name}" 
                                             Value="SUPERSTOP (FOUNDATIONS AND WALLS) 1/2&quot; X 1&quot;X 20 FT">
                                                    <Setter Property="IsEnabled" Value="True"/>
                                                    <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}"/>
                                                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}"/>
                                                </DataTrigger>-->
                                                <!--<DataTrigger Binding="{Binding Tag,
                                                RelativeSource={RelativeSource Self}}" 
                                                Value="True">
                                                    <Setter Property="FontWeight" Value="Bold" />
                                                    <Setter Property="Background" Value="Green" />
                                                    <Setter Property="Foreground" Value="White" />
                                                </DataTrigger>-->
                                                <!--<Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" Value="White" />
                                                    <Setter Property="Foreground" Value="Gray"/>
                                                    <Setter Property="FontWeight" Value="Normal" />
                                                </Trigger>-->
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <!--<DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Name}" 
                                             Value="SUPERSTOP (FOUNDATIONS AND WALLS) 1/2&quot; X 1&quot;X 20 FT">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="Background" Value="LightYellow"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                  
                                </DataTrigger>
                                
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>-->
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Binding="{Binding Coverage,StringFormat={}{0:n2}}" Header="Coverage"
                                    IsReadOnly="True" KeyboardNavigation.IsTabStop="False">

                    </DataGridTextColumn>
                    <DataGridTemplateColumn Header="Qty">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Tag="{Binding Qty,Converter={StaticResource HasFieldEdited}}" 
                                     Text="{Binding Qty,UpdateSourceTrigger=LostFocus,
                                StringFormat={}{0:n2}}"
                                     Name="qtyTb"
                                     Style="{StaticResource editableTextbox}"
                                    IsEnabled="{Binding Path=Name,
                                Converter={StaticResource qtyTextboxConv}}"
                                     KeyboardNavigation.IsTabStop="{Binding Path=Name,
                                Converter={StaticResource qtyTextboxConv}}"/>

                            </DataTemplate>

                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding MaterialPrice,
                    UpdateSourceTrigger=PropertyChanged,StringFormat='c'}"
                                    IsReadOnly="True" KeyboardNavigation.IsTabStop="False"
                                    Header="Material Price $">
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Material Extension" Binding="{Binding MaterialExtension,
                    UpdateSourceTrigger=PropertyChanged,StringFormat='c'}"
                                    IsReadOnly="True" KeyboardNavigation.IsTabStop="False">
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Weight" Binding="{Binding Weight,UpdateSourceTrigger=PropertyChanged}"
                                    IsReadOnly="True" KeyboardNavigation.IsTabStop="False">

                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Extension" Binding="{Binding FreightExtension,
                    UpdateSourceTrigger=PropertyChanged,StringFormat={}{0:n2}}"
                                    IsReadOnly="True" KeyboardNavigation.IsTabStop="False">

                    </DataGridTextColumn>
                    <DataGridTemplateColumn Header="Special Pricing($)">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Tag="{Binding SpecialMaterialPricing,StringFormat={}{0:C},Converter={StaticResource HasFieldEdited}}" 
                                     Text="{Binding SpecialMaterialPricing,UpdateSourceTrigger=LostFocus}"
                             Style="{StaticResource editableTextbox}"
                                     IsEnabled="True">
                                </TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>

            </DataGrid>
        <!--</ScrollViewer>-->

        
        <ScrollViewer Grid.Column="2"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Hidden">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>


                <!--<materialDesign:Flipper Grid.Row="0" Margin="5,10,5,10" IsFlipped="True"
                    VerticalAlignment="Top" x:Name="OtherCost" Style="{StaticResource FlipperStyle}">
                    
                    <materialDesign:Flipper.FrontContent>
                        <Grid Margin="10,50,10,50" >
                            <Button HorizontalAlignment="Stretch" VerticalAlignment="Top"
                            
                                Height="40"
                        ToolTip="Click to Add Other Costs"
                        Command="{x:Static materialDesign:Flipper.FlipCommand}"
                        >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">

                                        <TextBlock
                                Margin="2,0,0,0"
                                VerticalAlignment="Center"
                                Style="{StaticResource MaterialDesignSubtitle2TextBlock}"
                                Text="Other Costs" />
                                        <TextBlock x:Name="TotalOCExtension"
                                IsEnabled="False"                        
                                Margin="15,0,0,0"    
                                VerticalAlignment="Center"
                                Style="{StaticResource  MaterialDesignSubtitle1TextBlock}"                
                                Text="{Binding TotalOCExtension, UpdateSourceTrigger=PropertyChanged,StringFormat='c'}"/>
                                    </StackPanel>
                                </Button.Content>

                            </Button>
                        </Grid>
                    </materialDesign:Flipper.FrontContent>-->
                    <!--<materialDesign:Flipper.BackContent >-->
                        <Grid Margin="2" >
                            <Grid.RowDefinitions>
                                <RowDefinition      Height="Auto" />
                                <RowDefinition      Height="*" />
                            </Grid.RowDefinitions>
                            <materialDesign:ColorZone   Mode="Accent"
                                                
                                            Padding="10">
                                <StackPanel   Orientation="Horizontal">
                                    <!--<Button  Style="{StaticResource MaterialDesignToolForegroundButton}"
                                            Command="{x:Static materialDesign:Flipper.FlipCommand}"
                                            HorizontalAlignment="Left">
                                        <materialDesign:PackIcon
                                        Kind="ArrowLeft"
                                        HorizontalAlignment="Right" />
                                    </Button>-->
                                    <TextBlock
                                        Margin="8 0 0 0"
                                        VerticalAlignment="Center">
                                        Other Costs
                                    </TextBlock>
                            <TextBlock x:Name="TotalOCExtension"
                                    IsEnabled="False"   
                                       FontWeight="Bold"
                                    Margin="45,0,0,0"    
                                       HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource  MaterialDesignSubtitle1TextBlock}"                
                                    Text="{Binding TotalOCExtension, UpdateSourceTrigger=PropertyChanged,StringFormat='c'}"/>
                        </StackPanel>
                        
                            </materialDesign:ColorZone>

                            <DataGrid AutoGenerateColumns="False" HorizontalAlignment="Left"
                                      Grid.Row="1"
                        Name="OtherCostGrid" VerticalAlignment="Top"
                        CanUserSortColumns="False"
                        VerticalScrollBarVisibility="Auto"
                        Grid.Column="1"
                        materialDesign:DataGridAssist.CellPadding="4 2 2 2"
                        CanUserAddRows="false" 
                        CellStyle="{StaticResource editableCell}"
                    ItemsSource="{Binding OtherMaterials,UpdateSourceTrigger=PropertyChanged}">
                                <DataGrid.ColumnHeaderStyle>
                                    <Style BasedOn="{StaticResource {x:Type  DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Padding" Value="3" />
                                    </Style>
                                </DataGrid.ColumnHeaderStyle>

                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="Items" Width="200">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Name,Mode=TwoWay,
                                        UpdateSourceTrigger=PropertyChanged}"
                                                BorderThickness="0"
                                        KeyboardNavigation.IsTabStop="False">
                                                </TextBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Header="Quantity" 
                                    >
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Quantity,
                        Mode=TwoWay,UpdateSourceTrigger=LostFocus}"
                                                BorderThickness="0"
                                                >
                                                    <TextBox.Style>
                                                        <Style TargetType="{x:Type TextBox}" >
                                                            <Style.Triggers >
                                                                <Trigger Property="IsReadOnly" Value="False">
                                                                    <!--<Setter Property="Background" Value="LightYellow" />-->
                                                                    <Setter Property="Background" Value="{StaticResource   PrimaryHueLightBrush}" />
                                                                </Trigger>
                                                                <DataTrigger Binding="{Binding Quantity, 
                                            Converter={StaticResource HasFieldEdited}}" 
                                                        Value="True">
                                                                    <!--<Setter Property="Background" Value="Green" />
                                                                    <Setter Property="Foreground" Value="White"/>-->
                                                                    <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                                                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>

                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Header="Material Price ($)" 
                                    >
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding MaterialPrice,
                        Mode=TwoWay,UpdateSourceTrigger=LostFocus}"
                                                BorderThickness="0">
                                                    <TextBox.Style>
                                                        <Style TargetType="{x:Type TextBox}" >
                                                            <Style.Triggers >
                                                                <Trigger Property="IsReadOnly" Value="False">
                                                                    <!--<Setter Property="Background" Value="LightYellow" />-->
                                                                    <Setter Property="Background" Value="{StaticResource   PrimaryHueLightBrush}" />
                                                                </Trigger>
                                                                <DataTrigger Binding="{Binding MaterialPrice, 
                                            Converter={StaticResource HasFieldEdited}}" 
                                                        Value="True">
                                                                    <!--<Setter Property="Background" Value="Green" />
                                                                    <Setter Property="Foreground" Value="White"/>-->
                                                                    <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                                                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>

                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Extension($)" 
                                        IsReadOnly="True"
                                        Binding="{Binding Extension,Mode=OneWay,
                        UpdateSourceTrigger=PropertyChanged,StringFormat='c'}"/>
                                </DataGrid.Columns>

                            </DataGrid>
                            <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Right" Margin="5,0,15,0"
                                    >
                                <Button Name="AddButton" Style="{StaticResource  MaterialDesignFloatingActionButton}"
                                HorizontalAlignment="Right"
                                Height="25"  Width="25"  Padding="0" 
                                Command="{Binding AddRowCommand}">
                                    <Button.Content>
                                        <materialDesign:PackIcon Kind="Add"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                                    </Button.Content>
                                </Button>
                                <Button Command="{Binding RemoveCommand}"    Style="{StaticResource MaterialDesignFloatingActionButton}"                
                                Height="25"
                                Margin="5,0,0,0"
                                Width="25"
                                Padding="0"
                                HorizontalAlignment="Right">
                                    <Button.Content>
                                        <materialDesign:PackIcon Kind="Remove"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                                    </Button.Content>
                                </Button>
                            </StackPanel>

                        </Grid>
                    <!--</materialDesign:Flipper.BackContent>
                </materialDesign:Flipper>-->
                <materialDesign:Flipper Margin="5,20,5,10"
                                        
                                        IsFlipped="True" 
                    VerticalContentAlignment="Center"             
                    Grid.Row="1" Style="{DynamicResource MaterialDesignCardFlipper}"
                    HorizontalAlignment="Stretch">
                    <materialDesign:Flipper.FrontContent >
                        <Grid Margin=" 10,50,10,50" HorizontalAlignment="Stretch">
                            <Button HorizontalAlignment="Stretch"
                                Height="40" 
                                VerticalAlignment="Stretch" ToolTip="Click to Add Subcontract labor"
                                Command="{x:Static materialDesign:Flipper.FlipCommand}"
                    >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock
                            Margin="2,0,0,0"
                            VerticalAlignment="Center"
                            Style="{StaticResource MaterialDesignSubtitle2TextBlock}"
                            Text="Sub Contract Labor" />
                                        <TextBlock x:Name="TotalSCExtension"
                            IsEnabled="False"                        
                            Margin="15,0,0,0"    
                            VerticalAlignment="Center"
                            Style="{StaticResource  MaterialDesignSubtitle1TextBlock}"                
                            Text="{Binding TotalSCExtension, UpdateSourceTrigger=PropertyChanged,StringFormat='c'}"/>


                                    </StackPanel>
                                </Button.Content>

                            </Button>
                        </Grid>

                    </materialDesign:Flipper.FrontContent>
                    <materialDesign:Flipper.BackContent >
                        <Grid Margin="0,0,0,40">
                            <Grid.RowDefinitions>
                                <RowDefinition      Height="Auto" />
                                <RowDefinition      Height="*" />
                            </Grid.RowDefinitions>
                            <materialDesign:ColorZone   Mode="Accent"
                                                
                                            Padding="6">
                                <StackPanel   Orientation="Horizontal">
                                    <Button  Style="{StaticResource MaterialDesignToolForegroundButton}"
                                            Command="{x:Static materialDesign:Flipper.FlipCommand}"
                                            HorizontalAlignment="Left">
                                        <materialDesign:PackIcon
                                        Kind="ArrowLeft"
                                        HorizontalAlignment="Right" />
                                    </Button>
                                    <TextBlock
                                        Margin="8 0 0 0"
                                        VerticalAlignment="Center">
                                        Add Sub-Contract Labor
                                    </TextBlock>
                                </StackPanel>
                            </materialDesign:ColorZone>
                            <StackPanel Grid.Row="1">
                                <DataGrid AutoGenerateColumns="False" Name="SubConlbrcstGrid" VerticalAlignment="Top"
                        CanUserSortColumns="False"
                    materialDesign:DataGridAssist.CellPadding="4"
                    Grid.Column="1"
                    CanUserAddRows="false"                      
                ItemsSource="{Binding SubContractLaborItems,UpdateSourceTrigger=PropertyChanged}">
                                    <DataGrid.ColumnHeaderStyle>
                                        <Style BasedOn="{StaticResource {x:Type  DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Padding" Value="4" />
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Labor Details" 
                                IsReadOnly="False"
                                Binding="{Binding Name}"/>
                                        <DataGridTextColumn Header="Units"
                                IsReadOnly="{Binding IsReadOnly,Source= UnitConlbrcst}"
                                Binding="{Binding UnitConlbrcst,UpdateSourceTrigger=LostFocus}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers >
                                                        <Trigger Property="IsReadOnly" Value="False">
                                                            <!--<Setter Property="Background" Value="LightYellow" />-->
                                                            <Setter Property="Background" Value="{StaticResource   PrimaryHueLightBrush}" />
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding UnitConlbrcst, 
                                        Converter={StaticResource HasFieldEdited}}" 
                                                    Value="True">
                                                            <!--<Setter Property="Background" Value="Green" />
                                                            <Setter Property="Foreground" Value="White"/>-->
                                                            <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                                            <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                                                            <Setter Property="FontWeight" Value="Bold"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Unit Price ($)"
                                IsReadOnly="{Binding IsReadOnly}"
                                Binding="{Binding UnitPriceConlbrcst,UpdateSourceTrigger=LostFocus}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers >
                                                        <Trigger Property="IsReadOnly" Value="False">
                                                            <!--<Setter Property="Background" Value="LightYellow" />-->
                                                            <Setter Property="Background" Value="{StaticResource   PrimaryHueLightBrush}" />
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding UnitPriceConlbrcst, 
                                        Converter={StaticResource HasFieldEdited}}" 
                                                    Value="True">
                                                            <!--<Setter Property="Background" Value="Green" />
                                                            <Setter Property="Foreground" Value="White"/>-->
                                                            <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                                            <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                                                            <Setter Property="FontWeight" Value="Bold"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Extension($)" 
                                    IsReadOnly="True"
                                    Binding="{Binding MaterialExtensionConlbrcst,
                    UpdateSourceTrigger=PropertyChanged,StringFormat='c'}"/>
                                    </DataGrid.Columns>

                                </DataGrid>
                                <StackPanel Orientation="Horizontal" >

                                    <TextBlock Text="SubContract Markup%"  Margin="15,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                                    <TextBox Text="{Binding ElementName=slWidth,
                                Path=Value, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                TextAlignment="Center"
                                Width="40" 
                                Margin="15,0,0,0"
                            VerticalAlignment="Center"
                                />

                                    <Slider Maximum="1" Value="{Binding SubContractMarkup}"
                            Style="{StaticResource MaterialDesignDiscreteHorizontalSlider}"
                            Width="200"
                        VerticalAlignment="Top"
                            LargeChange=".2"
                            Minimum="0"
                                        Margin="5,0,0,0"
                            TickPlacement="Both"
                            TickFrequency=".05" 
                            IsSnapToTickEnabled="True"
                            Name="slWidth"
                />
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </materialDesign:Flipper.BackContent>
                </materialDesign:Flipper>
                <GroupBox x:Name="groupBoxMisc" 
                  Margin="5,15,5,5"
                  Grid.Row="2"
                      VerticalAlignment="Bottom"
                  Header="Total Material Cost Breakup">
                    <Grid x:Name="grid5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>

                        </Grid.RowDefinitions>

                        <Label Content="Total Material Cost ($)" Grid.Row="0"
                       Margin="0,0,5,5"
                       Style="{StaticResource  MaterialDesignLabel}"
                       />
                        <Label Content="Total Weight "
                       Grid.Row="1"
                       Style="{StaticResource  MaterialDesignLabel}"
                       />
                        <Label Content="Total Freight Cost ($)"
                       Grid.Row="2"
                       Style="{StaticResource  MaterialDesignLabel}" 
                       />

                        <Label Content="Total Sub Contract Labor Cost ($)"
                       Grid.Row="3"
                       Style="{StaticResource MaterialDesignLabel}"  
                       />
                        <Label Content="Cost per Square Foot ($)"
                       Grid.Row="4"
                       Style="{StaticResource MaterialDesignLabel}"  
                       />
                        <TextBox x:Name="TotalMaterialCostbrkp"
                         IsEnabled="False"
                         VerticalContentAlignment="Center"
                         Grid.Row="0"
                         Margin="5,0,5,5"
                         Grid.Column="2"
                         Height="25" Width="150"
                         Text="{Binding TotalMaterialCost,
                    UpdateSourceTrigger=PropertyChanged,StringFormat='c'}"/>
                        <TextBox x:Name="TotalWeightbrkp"
                         IsEnabled="False" Grid.Row="1" 
                         Grid.Column="2"
                         Margin="5,1,5,6"
                         VerticalContentAlignment="Center"
                         Text="{Binding TotalWeightbrkp,StringFormat=N2,
                    UpdateSourceTrigger=PropertyChanged}" Height="25" Width="150" />
                        <TextBox x:Name="TotalFreightCostBrkp"
                         IsEnabled="False"
                         Grid.Row="2"
                         Margin="5,0,5,5"
                         Grid.Column="2"
                         VerticalContentAlignment="Center"
                         Text="{Binding TotalFreightCostBrkp,
                    UpdateSourceTrigger=PropertyChanged,StringFormat='c'}" Height="25" Width="150" />
                        <TextBox x:Name="TotalSubContractLaborCostBrkp"
                         IsEnabled="False"
                         Grid.Row="3"
                         Margin="5,0,5,5"
                         VerticalContentAlignment="Center"
                         Grid.Column="2"
                         Text="{Binding TotalSubContractLaborCostBrkp,StringFormat='c',
                    UpdateSourceTrigger=PropertyChanged}" Height="25" Width="150" />
                        <TextBox x:Name="CostpersqFeet"
                         IsEnabled="False"
                         Grid.Row="4"
                         Margin="5,0,5,5"
                         VerticalContentAlignment="Center"
                         Grid.Column="2"
                         Text="{Binding CostPerSquareFeet,StringFormat='c',
                    UpdateSourceTrigger=PropertyChanged}" Height="25" Width="150" />

                    </Grid>
                </GroupBox>
                <Button Command="{Binding CalculateCostCommand}"
                        Grid.Row="3" VerticalAlignment="Center"
                        Height="30" 
                    Margin="5,10,5,15"
                HorizontalAlignment="Right"
                >

                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Calculator"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"/>
                            <TextBlock Text="Calculate" VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Margin="5" FontWeight="bold"/>

                        </StackPanel>
                    </Button.Content>
                </Button>
            </Grid>

        </ScrollViewer>
        

    </Grid>
</UserControl>
